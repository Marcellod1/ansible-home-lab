- name: Start container {{ portainer_container_name }}
  become: true
  community.docker.docker_container:
    name: "{{ portainer_container_name }}"
    image: portainer/portainer-ce:{{ portainer_version }}
    state: "{{ portainer_container_state }}"
    restart: "{{ portainer_container_restart }}"
    restart_policy: "{{ portainer_container_restart_policy }}"
    network_mode: bridge
    ports:
      - "{{ portainer_web_host_port }}:9443"
      - "{{ portainer_agent_host_port }}:8000"
    mounts:
      - source: "{{ portainer_container_name }}_data"
        target: /data
        type: volume
      - source: "/var/run/docker.sock"
        target: "/var/run/docker.sock"
        type: bind
  register: portainer_container

- name: Template the base API path from container settings
  set_fact:
    portainer_api_base_url: https://{{ portainer_container.container.NetworkSettings.IPAddress }}:{{ portainer_web_host_port }}/api

- name: Initialize admin user password
  uri:
    url: "{{ portainer_api_base_url }}/users/admin/init"
    method: POST
    validate_certs: false
    body_format: json
    body: 
      Username: "{{ portainer_admin_user }}"
      Password: "{{ portainer_admin_password }}"
    status_code: 
      - 200
      - 409

- name: Generate authentication token
  uri:
    url: "{{ portainer_api_base_url }}/auth"
    method: POST
    validate_certs: false
    return_content: true
    body_format: json
    body: 
      Username: "{{ portainer_admin_user }}"
      Password: "{{ portainer_admin_password }}"
  register: authentication_response

- name: Get authetication token from API response
  set_fact:
    authentication_token: "{{ authentication_response.json.jwt }}"

- name: Get exisiting portainer endpoints
  uri:
    url: "{{ portainer_api_base_url }}/endpoints"
    method: GET
    validate_certs: false
    return_content: true
    headers:
      Authorization: "{{ authentication_token }}"
  register: endpoints_api_response

- name: Get exisitng endpoints from API response 
  set_fact:
    existing_endpoints: "{{ endpoints_api_response.json | map(attribute='Name') | list }}"

- name: Create endpoint environments
  uri:
    url: "{{ portainer_api_base_url }}/endpoints"
    method: POST
    validate_certs: false
    body_format: form-multipart
    headers:
      Authorization: "{{ authentication_token }}"
    body:
      Name: "{{ endpoint.name }}"
      EndpointCreationType: "1"
      URL: "tcp://{{ endpoint.ip_address }}:{{ endpoint.port | default(2375, true) }}"
  when: endpoint.name not in existing_endpoints
  with_items: "{{ portainer_endpoints }}"
  loop_control:
    loop_var: endpoint
